CC        := gcc -std=c11
CFLAGS    := -Wall -Werror -fPIC
LIBS      :=
AR        := ar
ARFLAGS   := rcs
TARGET    := pgb
INCLUDES  := -Iinclude

DSTDIR    :=
PREFIX    := usr/local
PKGCONFIG := $(DSTDIR)/$(PREFIX)/lib/pkgconfig
MAN_DIR   := $(DSTDIR)/$(PREFIX)/share/man/man3

STATIC_LIB      := lib$(TARGET).a
DYNAMIC_LIB     := lib$(TARGET).so
PKG_CONFIG_FILE := $(TARGET).pc

TARBALL_VERSION = master
TRABALL_DIR = ..

OBJS      := \
	src/pgb/main.o				\
	src/pgb/cpu/clock.o			\
	src/pgb/cpu/cpu.o			\
	src/pgb/cpu/decoder.o			\
	src/pgb/cpu/decoder/logical_decoder.o	\
	src/pgb/cpu/decoder/table_decoder.o	\
	src/pgb/cpu/interpreter/interpreter.o	\
	src/pgb/cpu/registers.o			\
	src/pgb/device/device.o			\
	src/pgb/mmu/mmu.o

.PHONY: all clean debug force help install uninstall

all: ## Builds the sample test main program, dynamic libary and static library.
all: target libs

debug: ## Builds the sample test main program, dynamic libary and static library with debug information.
debug: CFLAGS += -g -DDEBUG
debug: target libs

install: ## Installs project headers, libraries, manpages, and pkg-config files.
install: libs
	mkdir -p $(DSTDIR)/$(PREFIX)/include
	mkdir -p $(DSTDIR)/$(PREFIX)/lib
	mkdir -p $(PKGCONFIG)
	cp -P $(STATIC_LIB) $(DYNAMIC_LIB) $(DSTDIR)/$(PREFIX)/lib
	cp -r include/$(TARGET) $(DSTDIR)/$(PREFIX)/include
	@echo "Creating $(PKGCONFIG)/$(PKG_CONFIG_FILE)"
	@echo 'prefix=/$(PREFIX)'               > $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'exec_prefix=$${prefix}'         >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'libdir=$${exec_prefix}/lib'     >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'includedir=$${prefix}/include'  >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo ""                               >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo "Name: pgb"                      >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo "Description: Gameboy emulator written in C." \
					       >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo "Version: 0.0.0"                 >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo ""                               >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'Libs: -L$${libdir} -l${TARGET}' >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'Libs.private:'                  >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)
	@echo 'Cflags: -I$${includedir}'       >> $(PKGCONFIG)/$(PKG_CONFIG_FILE)

uninstall: ## Uninstalls project headers, libraries, manpages, and pkg-config files.
	rm -f $(DSTDIR)/$(PREFIX)/lib/$(STATIC_LIB)
	rm -f $(DSTDIR)/$(PREFIX)/lib/$(DYNAMIC_LIB)
	rm -rf $(DSTDIR)/$(PREFIX)/include/$(TARGET)
	rm -f $(PKGCONFIG)/$(TARGET).pc
	rm -f $(MAN_DIR)/*.3$(TARGET)


target: ## Builds the sample test main program.
target: $(OBJS)
	$(CC) $(CFLAGS) -o $(TARGET)  $^ $(LIBS)

libs: ## Builds dynamic and static libraries.
libs: $(STATIC_LIB) $(DYNAMIC_LIB)

$(STATIC_LIB): $(OBJS)
	$(AR) $(ARFLAGS) $@ $(filter-out src/pgb/main.o, $(OBJS))

$(DYNAMIC_LIB): $(OBJS)
	$(CC) -shared -o $@ $(filter-out src/pgb/main.o, $(OBJS))

%.o: %.c .compiler_flags
	$(CC) $(CFLAGS) $(INCLUDES) -c -MMD -MP $< -o $@

.compiler_flags: force
	@echo '$(CFLAGS)' | cmp -s - $@ || echo '$(CFLAGS)' > $@

-include $(OBJS:.o=.d)

help: ## Generates this help menu.
	@grep -hE '^\S+:.*##' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

clean: ## Removed all files generated by this Makefile.
	rm -f $(OBJS) $(patsubst %.o, %.d, $(OBJS)) $(TARGET) .compiler_flags *.a *.so
